{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "aeryjfg0um4u8e"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "${device_name_y} - ${measurement_name_y}",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 5,
            "pointShape": "circle",
            "pointSize": {
              "fixed": 11
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [
            {
              "options": {
                "${use_timestamp} == 'true' ? 'Time (s)' : '${device_name_x} - ${measurement_name_x}'": {
                  "index": 0
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "x_value"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "${device_name_x} - ${measurement_name_x}"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 30,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "mapping": "auto",
        "series": [
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 0
              }
            }
          }
        ],
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "aeryjfg0um4u8e"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.10.1",
          "queryType": "table",
          "rawSql": "\n\nWITH\n  (SELECT min(timestamp) FROM measurement_data WHERE session_id = '${session_id}' AND device_name = '${device_name_x}') AS min_ts\n\nSELECT\n  CASE\n    WHEN endsWith('${measurement_name_x}', ' measurement time (s)') THEN\n      (toUnixTimestamp64Milli(x.timestamp) - toUnixTimestamp64Milli(min_ts)) / 1000.0\n    ELSE x.value\n  END AS x_value,\n  y.value AS y_value\nFROM\n(\n  SELECT sample_index, value, timestamp, channel_name\n  FROM measurement_data\n  WHERE session_id = '${session_id}'\n    AND device_name = '${device_name_x}'\n    AND (\n      channel_name = replaceRegexpOne('${measurement_name_x}', ' measurement time \\\\(s\\\\)$', '')\n      OR endsWith('${measurement_name_x}', ' measurement time (s)')\n    )\n    AND channel_index = ${measurement_slice}\n) x\nJOIN\n(\n  SELECT sample_index, value\n  FROM measurement_data\n  WHERE session_id = '${session_id}'\n    AND device_name = '${device_name_y}'\n    AND channel_name = '${measurement_name_y}'\n    AND channel_index = ${measurement_slice}\n) y\nON x.sample_index = y.sample_index\nORDER BY x.sample_index\n\n",
          "refId": "A"
        }
      ],
      "title": "Measurement Data",
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "aeryjfg0um4u8e"
      },
      "description": "List of sessions",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "experiment_id"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 300
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "email"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 225
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "session_description"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 97
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "session_id"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 388
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "session_id"
          }
        ]
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "builderOptions": {
            "aggregates": [],
            "columns": [
              {
                "alias": "*",
                "custom": false,
                "name": "*",
                "type": "String"
              }
            ],
            "database": "default",
            "filters": [],
            "groupBy": [],
            "limit": 1000,
            "meta": {},
            "mode": "list",
            "orderBy": [],
            "queryType": "table",
            "table": "session_info"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "aeryjfg0um4u8e"
          },
          "editorType": "builder",
          "format": 1,
          "pluginVersion": "4.10.1",
          "rawSql": "SELECT * FROM \"default\".\"session_info\" LIMIT 1000",
          "refId": "A"
        }
      ],
      "title": "Sessions",
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "aeryjfg0um4u8e"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "result_info"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 320
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "session_id"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 320
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "result_status"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 122
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 13
      },
      "id": 4,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "builderOptions": {
            "aggregates": [],
            "columns": [
              {
                "alias": "*",
                "custom": false,
                "name": "*",
                "type": "String"
              }
            ],
            "database": "default",
            "filters": [],
            "groupBy": [],
            "limit": 1000,
            "meta": {},
            "mode": "list",
            "orderBy": [],
            "queryType": "table",
            "table": "results_store"
          },
          "editorType": "builder",
          "format": 1,
          "pluginVersion": "4.10.2",
          "rawSql": "SELECT * FROM \"default\".\"results_store\" LIMIT 1000",
          "refId": "A"
        }
      ],
      "title": "Results table",
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "aeryjfg0um4u8e"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto",
              "wrapText": true
            },
            "filterable": true,
            "inspect": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "experiment_id"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 148
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "device_name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 234
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "session_id"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 345
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 21
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "builderOptions": {
            "aggregates": [],
            "columns": [
              {
                "alias": "*",
                "custom": false,
                "name": "*",
                "type": "String"
              }
            ],
            "database": "default",
            "filters": [
              {
                "condition": "AND",
                "filterType": "custom",
                "key": "experiment_id",
                "label": "experiment_id",
                "operator": "=",
                "type": "UUID",
                "value": "$(experiment_id)"
              }
            ],
            "groupBy": [],
            "limit": 1000,
            "meta": {},
            "mode": "list",
            "orderBy": [],
            "queryType": "table",
            "table": "device_info"
          },
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "aeryjfg0um4u8e"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "aggregates": [],
              "columns": [
                {
                  "alias": "*",
                  "custom": false,
                  "name": "*",
                  "type": "String"
                }
              ],
              "database": "default",
              "filters": [
                {
                  "condition": "AND",
                  "filterType": "custom",
                  "key": "experiment_id",
                  "label": "experiment_id",
                  "operator": "=",
                  "type": "UUID",
                  "value": "$(experiment_id)"
                }
              ],
              "groupBy": [],
              "limit": 1000,
              "meta": {},
              "mode": "list",
              "orderBy": [],
              "queryType": "table",
              "table": "device_info"
            }
          },
          "pluginVersion": "4.10.1",
          "queryType": "table",
          "rawSql": "SELECT * FROM \"default\".\"device_info\" WHERE session_id = '${session_id}'  LIMIT 1000",
          "refId": "A"
        }
      ],
      "title": "Device configurations",
      "type": "table"
    }
  ],
  "preload": false,
  "refresh": "5m",
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "80c004b3-74e2-4a9e-8640-4319a3f25a6f",
          "value": "80c004b3-74e2-4a9e-8640-4319a3f25a6f"
        },
        "definition": "SELECT DISTINCT session_id FROM measurement_data",
        "description": "",
        "name": "session_id",
        "options": [],
        "query": "SELECT DISTINCT session_id FROM measurement_data",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "test_daq",
          "value": "test_daq"
        },
        "definition": "SELECT DISTINCT device_name FROM measurement_data\nWHERE session_id = '${session_id}'",
        "name": "device_name_x",
        "options": [],
        "query": "SELECT DISTINCT device_name FROM measurement_data\nWHERE session_id = '${session_id}'",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "counts",
          "value": "counts"
        },
        "definition": "SELECT DISTINCT channel_name FROM measurement_data\nWHERE session_id = '${session_id}' AND device_name = '${device_name_x}'\n\nUNION ALL\n\nSELECT DISTINCT concat(channel_name, ' measurement time (s)') AS channel_name\nFROM measurement_data\nWHERE session_id = '${session_id}' AND device_name = '${device_name_x}'\n",
        "name": "measurement_name_x",
        "options": [],
        "query": "SELECT DISTINCT channel_name FROM measurement_data\nWHERE session_id = '${session_id}' AND device_name = '${device_name_x}'\n\nUNION ALL\n\nSELECT DISTINCT concat(channel_name, ' measurement time (s)') AS channel_name\nFROM measurement_data\nWHERE session_id = '${session_id}' AND device_name = '${device_name_x}'\n",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "test_daq",
          "value": "test_daq"
        },
        "definition": "SELECT DISTINCT device_name FROM measurement_data\nWHERE session_id = '${session_id}'",
        "name": "device_name_y",
        "options": [],
        "query": "SELECT DISTINCT device_name FROM measurement_data\nWHERE session_id = '${session_id}'",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "counts",
          "value": "counts"
        },
        "definition": "SELECT DISTINCT channel_name FROM measurement_data\nWHERE session_id = '${session_id}' AND device_name = '${device_name_y}'\n",
        "name": "measurement_name_y",
        "options": [],
        "query": "SELECT DISTINCT channel_name FROM measurement_data\nWHERE session_id = '${session_id}' AND device_name = '${device_name_y}'\n",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "0",
          "value": "0"
        },
        "definition": "SELECT DISTINCT channel_index FROM measurement_data",
        "description": "Slice into mutli-dimensional datasets. For 1D (usual case) data, this should be 0",
        "name": "measurement_slice",
        "options": [],
        "query": "SELECT DISTINCT channel_index FROM measurement_data",
        "refresh": 1,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "utc",
  "title": "DAQ dashboard",
  "uid": "ben39p1rhswe8e",
  "version": 36
}

